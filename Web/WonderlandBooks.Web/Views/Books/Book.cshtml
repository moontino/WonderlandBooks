@using Microsoft.AspNetCore.Identity
@using WonderlandBooks.Data.Models
@model WonderlandBooks.Web.ViewModels.Books.RandomListBookViewModel
@inject SignInManager<ApplicationUser> SignInManager
@{
    this.ViewData["Title"] = "Book";
}

@section Styles {
    <link href="~/custom/star.css" rel="stylesheet" />
}

<section class="ftco-about img ftco-section" id="about-section">
    <div class="container">
        <div class="row d-flex no-gutters">
            <div class="col-md-6 col-lg-6 d-flex">
                <div class="img-about img d-flex align-items-stretch">
                    <div class="overlay"></div>
                    <div class="img d-flex align-self-stretch align-items-center" style="background-image:url(@Model.Book.ImageUrl);">
                    </div>
                </div>
            </div>
            <div class="col-md-6 col-lg-6 pl-md-5">
                <div class="row justify-content-start pb-3">
                    <div class="col-md-12 heading-section ftco-animate">
                        <h2 class="mb-4">@Model.Book.Name</h2>
                        <p>@Model.Book.Description</p>
                        <div class="text-about">
                            <h4>Author</h4>
                            @foreach (var author in Model.Book.Authors)
                            {
                                <p><a asp-controller="Authors" asp-action="Author" asp-route-id=@author.Id>@author.Name</a></p>
                            }
                            <h4>Genres: </h4><p>@Model.Book.Genres</p>
                            <h4>Pages: </h4><p>@Model.Book.Pages</p>
                            <h4>Language: </h4><p>@Model.Book.EditionLanguage</p>
                            <h4>Characters: </h4><p>@Model.Book.Characters</p>
                            <h4>Site: </h4><p><a href="@Model.Book.BookUrl">@Model.Book.BookUrl</a></p>
                        </div>
                    </div>
                </div>
                <ul class="ratings">
                    <li class="star" data-vote="5"></li>
                    <li class="star" data-vote="4"></li>
                    <li class="star" data-vote="3"></li>
                    <li class="star" data-vote="2"></li>
                    <li class="star" data-vote="1"></li>
                </ul>
                <h1>5 / <span id="averageVoteValue">@Model.Book.VotesAvarege</span></h1>
                @if (this.SignInManager.IsSignedIn(this.User))
                {
                    <div>
                        <button type="button" class="btn btn-primary" id="btn-save-book" title="Click for save the book">Save book</button>
                    </div>
                }
            </div>
        </div>
    </div>
</section>
<section class="ftco-section ftco-project" id="projects-section">
    <div class="container">
        <div class="row no-gutters justify-content-center pb-5">
            <div class="col-md-12 heading-section text-center ftco-animate">
                <h2 class="mb-4"> Check out more books...</h2>
            </div>
        </div>
        <div class="row">
            @foreach (var book in Model.RandomBooks)
            {

                <div class="col-md-3">
                    <div class="project img ftco-animate d-flex justify-content-center align-items-end" style="background-image: url(@book.ImageUrl);">
                        <div class="overlay"></div>
                        <div class="text p-4">
                            <h3><a asp-controller="Books" asp-action="Book" asp-route-id=@book.Id>@book.Name</a></h3>

                        </div>
                    </div>
                </div>

            }
        </div>
    </div>
</section>
<form method="post" id="antiForgeryForm"></form>

@section Scripts{
    <script>
        $(function () {
            var star = '.star',
                selected = '.selected';

            $(star).on('click', function () {
                $(selected).each(function () {
                    $(this).removeClass('selected');
                });
                $(this).addClass('selected');
            });

        });
    </script>
    <script>
        $("li[data-vote]").each(function (el) {
            $(this).click(function () {
                var value = $(this).attr("data-vote");
                var bookId = @Model.Book.Id;
                var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
                var data = { bookId: bookId, value: value };
                $.ajax({
                    type: "POST",
                    url: "/api/VoteBooks",
                    data: JSON.stringify(data),
                    headers: {
                        'X-CSRF-TOKEN': antiForgeryToken
                    },
                    success: function (data) {
                        $('#averageVoteValue').html(data.averageVote.toFixed(1));
                    },
                    contentType: 'application/json',
                });
            })
        });
    </script>
    <script>

        $("#btn-save-book").click(function (e) {
            e.preventDefault();
            var bookId = @Model.Book.Id;
            var antiForgeryToken = $('#antiForgeryForm input[name=__RequestVerificationToken]').val();
            var data = { bookId: bookId };

            $.ajax({
                type: "POST",
                url: "/api/Libraries",
                data: JSON.stringify(data),
                headers: {
                    'X-CSRF-TOKEN': antiForgeryToken
                },
                success: function (res) {

                    if (res) {
                        $("#btn-save-book").prop('disabled', true).text("@Model.Book.Name is already in your library")
                    } else {
                        $("#btn-save-book").prop('disabled', false).text("Save book")
                    }
                },
                contentType: 'application/json',
            });
        });
        $(window).load(function (e) {
            $.ajax({
                type: "GET",
                url: "/api/Libraries/" + @Model.Book.Id,
                contentType: 'application/json',
                success: (res) => {

                    if (res) {
                        $("#btn-save-book").prop('disabled', true).text("@Model.Book.Name is already in your library")
                    } else {
                        $("#btn-save-book").prop('disabled', false).text("Save book");
                    };
                }
            });
        });
    </script>

}